MODULE user(x,running) 
VAR 
  state : { idle, try, crit, exit }; 
ASSIGN 
  init(state) := idle; 
  next(state) := 
    case 
      state = running & idle : { idle, try };
      state = running & try & x : crit; 
      state = running & crit : { crit, exit };  
      state = running & exit : idle; 
      TRUE : state; 
    esac; 
  next(x) := 
    case 
      state = running &  : FALSE; 
      state = running & exit : TRUE; 
      TRUE : x; 
    esac; 

MODULE main 
VAR 
  x : boolean; 
  running1: boolean;
  running2: boolean;
  proc1 :  user(x,running1); 
  proc2 :  user(x,running2); 
ASSIGN 
  init(x) := TRUE; 
  init(running1):=FALSE;
  init(running2):=FALSE;
  next(running1):={TRUE;FALSE};
  next(running2):=~next(running1);
INVARSPEC
  ((! ((proc1.state = crit) & (proc2.state = crit)));